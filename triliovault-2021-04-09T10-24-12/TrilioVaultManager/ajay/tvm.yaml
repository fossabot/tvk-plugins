apiVersion: triliovault.trilio.io/v1
kind: TrilioVaultManager
metadata:
  creationTimestamp: "2021-04-06T06:36:04Z"
  finalizers:
  - uninstall-helm-release
  generation: 1
  labels:
    triliovault: triliovault
  name: tvm
  namespace: ajay
  resourceVersion: "102424257"
  selfLink: /apis/triliovault.trilio.io/v1/namespaces/ajay/triliovaultmanagers/tvm
  uid: 2718d341-fa05-469a-a862-c9b0e63787a9
spec:
  applicationScope: Namespaced
  helmVersion:
    tillerNamespace: ""
    version: v3
  resources: {}
  restoreNamespaces:
  - default
  - ajay
  - ajay-res
  trilioVaultAppVersion: v2.1.0-beta.6
status:
  conditions:
    lastTransitionTime: "2021-04-09T04:53:36Z"
    message: 'failed to install release: rendered manifests contain a resource that
      already exists. Unable to continue with install: Secret "k8s-triliovault-web-backend-key"
      in namespace "ajay" exists and cannot be imported into the current release:
      invalid ownership metadata; label validation error: key "app.kubernetes.io/managed-by"
      must equal "Helm": current value is "k8s-triliovault"'
    reason: InstallError
    status: "True"
    type: ReleaseFailed
  deployedRelease:
    manifest: |
      ---
      # Source: k8s-triliovault/templates/serviceAccount.yaml
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: k8s-triliovault
        namespace: ajay
        labels:
          release: tvm-ajay
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault
          app.kubernetes.io/managed-by: Helm
      ---
      # Source: k8s-triliovault/templates/ingress-tls-secret.yaml
      apiVersion: v1
      kind: Secret
      metadata:
        name: k8s-triliovault-ingress-tls-certs
        namespace: ajay
        labels:
          app: k8s-triliovault-ingress-tls-certs
          release: tvm-ajay
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-ingress-tls-certs
          app.kubernetes.io/managed-by: Helm
      type: kubernetes.io/tls
      data:
        tls.crt: "c2FtcGxlIGNlcnQ="   # "sample cert"
        tls.key: "c2FtcGxlIGtleQ=="   # "sample key"
      ---
      # Source: k8s-triliovault/templates/secret.yaml
      apiVersion: v1
      kind: Secret
      metadata:
        name: k8s-triliovault-webhook-certs
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-webhook-certs
          app.kubernetes.io/managed-by: Helm
      type: Opaque
      ---
      # Source: k8s-triliovault/templates/web-backend-key-secret.yaml
      apiVersion: v1
      kind: Secret
      metadata:
        name: k8s-triliovault-web-backend-key
        namespace: ajay
        labels:
          app.kubernetes.io/instance: k8s-triliovault-web-backend-key
          app.kubernetes.io/managed-by: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/part-of: k8s-triliovault
      type: Opaque
      ---
      # Source: k8s-triliovault/templates/web-backend-tvkconfigs-secret.yaml
      apiVersion: v1
      kind: Secret
      metadata:
        name: k8s-triliovault-web-backend-tvkconfigs
        namespace: ajay
        labels:
          app.kubernetes.io/instance: k8s-triliovault-web-backend-tvkconfigs
          app.kubernetes.io/managed-by: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/part-of: k8s-triliovault
      type: Opaque
      ---
      # Source: k8s-triliovault/templates/tvk-resource-configmap.yaml
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: k8s-triliovault-config
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-config
          app.kubernetes.io/managed-by: Helm
      data:
        metadataJobLimits: |-
          cpu: 500m
          memory: 512Mi

        dataJobLimits: |-
          cpu: 1000m
          memory: 1536Mi
      ---
      # Source: k8s-triliovault/templates/clusterrole.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: k8s-triliovault-ajay-manager-role
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-manager-role
          app.kubernetes.io/managed-by: Helm
      rules:
      - apiGroups:
        - '*'
        resources:
        - '*'
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apiextensions.k8s.io
        resources:
        - customresourcedefinitions
        verbs:
        - create
        - update
      - apiGroups:
        - ""
        resources:
        - serviceaccounts
        - services
        - services/finalizers
        - secrets
        - events
        - persistentvolumeclaims
        - pods
        - endpoints
        - configmaps
        verbs:
        - create
        - update
        - delete
        - patch
      - apiGroups:
        - admissionregistration.k8s.io
        resources:
        - validatingwebhookconfigurations
        - mutatingwebhookconfigurations
        verbs:
        - create
        - update
        - delete
        - patch
      - apiGroups:
        - apps
        resources:
        - deployments
        verbs:
        - create
        - update
        - delete
      - apiGroups:
        - rbac.authorization.k8s.io
        resources:
        - clusterroles
        - clusterrolebindings
        verbs:
        - create
        - update
        - delete
        - patch
        - bind
        - escalate
      - apiGroups:
        - triliovault.trilio.io
        resources:
        - '*'
        verbs:
        - '*'
      - apiGroups:
        - snapshot.storage.k8s.io
        resources:
        - '*'
        verbs:
        - create
        - update
        - delete
        - patch
      - apiGroups:
        - ""
        resources:
        - persistentvolumes
        verbs:
        - update
      - apiGroups:
        - ""
        resources:
        - namespaces
        verbs:
        - create
        - update
        - delete
      - apiGroups:
        - batch
        - extensions
        resources:
        - jobs
        - cronjobs
        - cronjobs/status
        verbs:
        - create
        - update
        - delete
        - patch
      - apiGroups:
        - extensions
        - networking.k8s.io
        resources:
        - ingresses
        verbs:
        - create
        - patch
        - update
      - apiGroups:
        - extensions
        - networking.k8s.io
        resources:
        - ingresses/status
        verbs:
        - update
      - apiGroups:
        - networking.k8s.io
        resources:
        - ingressclasses
        verbs:
        - create
      ---
      # Source: k8s-triliovault/templates/clusterrolebinding.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: k8s-triliovault-ajay-manager-rolebinding
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-manager-rolebinding
          app.kubernetes.io/managed-by: Helm
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: k8s-triliovault-ajay-manager-role
      subjects:
      - kind: ServiceAccount
        name: k8s-triliovault
        namespace: ajay
      ---
      # Source: k8s-triliovault/templates/backupplans-admin.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-backupplans-v1-admin
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-backupplans-v1-admin
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - backupplans
          verbs:
            - '*'
      ---
      # Source: k8s-triliovault/templates/backupplans-edit.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-backupplans-v1-edit
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-backupplans-v1-edit
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - backupplans
          verbs:
            - create
            - update
            - patch
            - delete
      ---
      # Source: k8s-triliovault/templates/backupplans-view.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-backupplans-v1-view
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-backupplans-v1-view
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - backupplans
          verbs:
            - get
            - list
            - watch
      ---
      # Source: k8s-triliovault/templates/backups-admin.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-backups-v1-admin
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-backups-v1-admin
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - backups
          verbs:
            - '*'
      ---
      # Source: k8s-triliovault/templates/backups-edit.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-backups-v1-edit
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-backups-v1-edit
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - backups
          verbs:
            - create
            - update
            - patch
            - delete
      ---
      # Source: k8s-triliovault/templates/backups-view.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-backups-v1-view
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-backups-v1-view
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - backups
          verbs:
            - get
            - list
            - watch
      ---
      # Source: k8s-triliovault/templates/hooks-admin.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-hooks-v1-admin
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-hooks-v1-admin
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - hooks
          verbs:
            - '*'
      ---
      # Source: k8s-triliovault/templates/hooks-edit.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-hooks-v1-edit
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-hooks-v1-edit
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - hooks
          verbs:
            - create
            - update
            - patch
            - delete
      ---
      # Source: k8s-triliovault/templates/hooks-view.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-hooks-v1-view
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-hooks-v1-view
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - hooks
          verbs:
            - get
            - list
            - watch
      ---
      # Source: k8s-triliovault/templates/licenses-admin.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-licenses-v1-admin
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-licenses-v1-admin
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - licenses
          verbs:
            - '*'
      ---
      # Source: k8s-triliovault/templates/licenses-edit.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-licenses-v1-edit
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-licenses-v1-edit
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - licenses
          verbs:
            - create
            - update
            - patch
            - delete
      ---
      # Source: k8s-triliovault/templates/licenses-view.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-licenses-v1-view
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-licenses-v1-view
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - licenses
          verbs:
            - get
            - list
            - watch
      ---
      # Source: k8s-triliovault/templates/policies-admin.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-policies-v1-admin
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-policies-v1-admin
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - policies
          verbs:
            - '*'
      ---
      # Source: k8s-triliovault/templates/policies-edit.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-policies-v1-edit
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-policies-v1-edit
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - policies
          verbs:
            - create
            - update
            - patch
            - delete
      ---
      # Source: k8s-triliovault/templates/policies-view.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-policies-v1-view
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-policies-v1-view
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - policies
          verbs:
            - get
            - list
            - watch
      ---
      # Source: k8s-triliovault/templates/restores-admin.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-restores-v1-admin
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-restores-v1-admin
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - restores
          verbs:
            - '*'
      ---
      # Source: k8s-triliovault/templates/restores-edit.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-restores-v1-edit
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-restores-v1-edit
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - restores
          verbs:
            - create
            - update
            - patch
            - delete
      ---
      # Source: k8s-triliovault/templates/restores-view.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-restores-v1-view
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-restores-v1-view
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - restores
          verbs:
            - get
            - list
            - watch
      ---
      # Source: k8s-triliovault/templates/targets-admin.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-targets-v1-admin
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-targets-v1-admin
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - targets
          verbs:
            - '*'
      ---
      # Source: k8s-triliovault/templates/targets-edit.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-targets-v1-edit
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-targets-v1-edit
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - targets
          verbs:
            - create
            - update
            - patch
            - delete
      ---
      # Source: k8s-triliovault/templates/targets-view.yaml
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: k8s-triliovault-targets-v1-view
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-targets-v1-view
          app.kubernetes.io/managed-by: Helm
      rules:
        - apiGroups:
            - triliovault.trilio.io
          resources:
            - targets
          verbs:
            - get
            - list
            - watch
      ---
      # Source: k8s-triliovault/templates/ingress-svc.yaml
      apiVersion: v1
      kind: Service
      metadata:
        name: k8s-triliovault-ingress-gateway
        namespace: ajay
        labels:
          app: k8s-triliovault-ingress-gateway
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-ingress-gateway
          app.kubernetes.io/managed-by: Helm
      spec:
        ports:
          - name: http
            port: 80
            protocol: TCP
            targetPort: 80
          - name: https
            port: 443
            protocol: TCP
            targetPort: 443
        selector:
          app: k8s-triliovault-ingress-gateway
        type: NodePort
      ---
      # Source: k8s-triliovault/templates/web-backend-svc.yaml
      apiVersion: v1
      kind: Service
      metadata:
        name: k8s-triliovault-web-backend
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-web-backend
          app.kubernetes.io/managed-by: Helm
      spec:
        ports:
          - name: backend-port
            protocol: TCP
            port: 80
            targetPort: 9443
        selector:
          app: k8s-triliovault-web-backend
          release: tvm-ajay
        type: ClusterIP
      ---
      # Source: k8s-triliovault/templates/web-svc.yaml
      apiVersion: v1
      kind: Service
      metadata:
        name: k8s-triliovault-web
        namespace: ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-web
          app.kubernetes.io/managed-by: Helm
      spec:
        ports:
          - port: 80
            targetPort: 9443
        selector:
          app: k8s-triliovault-web
          release: tvm-ajay
        type: ClusterIP
      ---
      # Source: k8s-triliovault/templates/webhook-svc.yaml
      apiVersion: v1
      kind: Service
      metadata:
        name: k8s-triliovault-admission-webhook
        namespace: ajay
        labels:
          app: k8s-triliovault-admission-webhook
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-admission-webhook
          app.kubernetes.io/managed-by: Helm
          release: tvm-ajay
      spec:
        ports:
          - port: 443
            protocol: TCP
            targetPort: 9443
        selector:
          app: k8s-triliovault-admission-webhook
          release: tvm-ajay
        type: ClusterIP
      ---
      # Source: k8s-triliovault/templates/backend-deployment.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: k8s-triliovault-web-backend
        namespace: ajay
        labels:
          app: k8s-triliovault-web-backend
          release: tvm-ajay
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-web-backend
          app.kubernetes.io/managed-by: Helm
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: k8s-triliovault-web-backend
            release: tvm-ajay
        template:
          metadata:
            labels:
              app.kubernetes.io/part-of: k8s-triliovault
              app.kubernetes.io/name: k8s-triliovault
              app.kubernetes.io/instance: k8s-triliovault-web-backend
              app.kubernetes.io/managed-by: Helm
              app: k8s-triliovault-web-backend
              release: tvm-ajay
          spec:
            hostNetwork: false
            hostIPC: false
            hostPID: false
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            serviceAccountName: k8s-triliovault
            containers:
              - name: triliovault-backend
                image: eu.gcr.io/amazing-chalice-243510/web-backend:v2.1.0-beta.6
                imagePullPolicy: IfNotPresent
                env:
                - name: INSTALL_NAMESPACE
                  value: ajay
                - name: APP_SCOPE
                  value: Namespaced
                - name: RELEASE
                  value: tvm-ajay
                - name: RELEASE_TAG
                  value: v2.1.0-beta.6
                - name: RESTORE_NAMESPACES
                  value: default,ajay,ajay-res
                - name: WEB_SESSION_ACCESS_TTL
                  value: "1h"
                - name: WEB_SESSION_REFRESH_TTL
                  value: "24h"
                - name: WEB_SESSION_MAX_INACTIVITY_TTL
                  value: "15m"
                resources:
                  requests:
                    memory: "10Mi"
                    cpu: "10m"
                  limits:
                    memory: "512Mi"
                    cpu: "200m"
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    add:
                    - KILL
                    - AUDIT_WRITE
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: false
                  runAsNonRoot: true
                  runAsUser: 1001
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                      - amd64
      ---
      # Source: k8s-triliovault/templates/control-plane-deployment.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: k8s-triliovault-control-plane
        namespace: ajay
        labels:
          app: k8s-triliovault-control-plane
          rel: tvm-ajay
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-control-plane
          app.kubernetes.io/managed-by: Helm
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: k8s-triliovault-control-plane
            rel: tvm-ajay
        template:
          metadata:
            labels:
              app.kubernetes.io/part-of: k8s-triliovault
              app.kubernetes.io/name: k8s-triliovault
              app.kubernetes.io/instance: k8s-triliovault-control-plane
              app.kubernetes.io/managed-by: Helm
              app: k8s-triliovault-control-plane
              rel: tvm-ajay
          spec:
            hostNetwork: false
            hostIPC: false
            hostPID: false
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            serviceAccountName: k8s-triliovault
            containers:
              - name: triliovault-control-plane
                image: eu.gcr.io/amazing-chalice-243510/control-plane:v2.1.0-beta.6
                imagePullPolicy: IfNotPresent
                env:
                - name: IMAGE_PULL_POLICY
                  value: IfNotPresent
                - name: INSTALL_NAMESPACE
                  value: ajay
                - name: RELEASE_TAG
                  value: v2.1.0-beta.6
                - name: APP_SCOPE
                  value: Namespaced
                - name: TVK_CONFIG
                  value: k8s-triliovault-config
                - name: WEB_SESSION_ACCESS_TTL
                  value: "1h"
                - name: WEB_SESSION_REFRESH_TTL
                  value: "24h"
                - name: RELATED_IMAGE_METAMOVER
                  value: eu.gcr.io/amazing-chalice-243510/metamover:v2.1.0-beta.6
                - name: RELATED_IMAGE_DATAMOVER
                  value: eu.gcr.io/amazing-chalice-243510/datamover:v2.1.0-beta.6
                - name: RELATED_IMAGE_DATASTORE_ATTACHER
                  value: eu.gcr.io/amazing-chalice-243510/datastore-attacher:v2.1.0-beta.6
                - name: RELATED_IMAGE_BACKUP_SCHEDULER
                  value: eu.gcr.io/amazing-chalice-243510/backup-scheduler:v2.1.0-beta.6
                - name: RELATED_IMAGE_BACKUP_CLEANER
                  value: eu.gcr.io/amazing-chalice-243510/backup-cleaner:v2.1.0-beta.6
                - name: RELATED_IMAGE_BACKUP_RETENTION
                  value: eu.gcr.io/amazing-chalice-243510/backup-retention:v2.1.0-beta.6
                - name: RELATED_IMAGE_TARGET_BROWSER
                  value: eu.gcr.io/amazing-chalice-243510/target-browser:v2.1.0-beta.6
                - name: RELATED_IMAGE_HOOK
                  value: eu.gcr.io/amazing-chalice-243510/hook-executor:v2.1.0-beta.6
                resources:
                  requests:
                    memory: "10Mi"
                    cpu: "10m"
                  limits:
                    memory: "512Mi"
                    cpu: "200m"
                volumeMounts:
                  - mountPath: /opt/tvk/config
                    name: tvk-config
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    add:
                    - KILL
                    - AUDIT_WRITE
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: false
                  runAsNonRoot: true
                  runAsUser: 1001
              - name: triliovault-analyzer
                image: eu.gcr.io/amazing-chalice-243510/analyzer:v2.1.0-beta.6
                imagePullPolicy: IfNotPresent
                env:
                  - name: IMAGE_PULL_POLICY
                    value: IfNotPresent
                  - name: INSTALL_NAMESPACE
                    value: ajay
                  - name: RELEASE_TAG
                    value: v2.1.0-beta.6
                  - name: APP_SCOPE
                    value: Namespaced
                  - name: TVK_CONFIG
                    value: k8s-triliovault-config
                resources:
                  requests:
                    memory: "10Mi"
                    cpu: "10m"
                  limits:
                    memory: "512Mi"
                    cpu: "200m"
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    add:
                    - KILL
                    - AUDIT_WRITE
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: false
                  runAsNonRoot: true
                  runAsUser: 1001
            volumes:
              - name: tvk-config
                configMap:
                  name: k8s-triliovault-config
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                      - amd64
      ---
      # Source: k8s-triliovault/templates/exporter-deployment.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: k8s-triliovault-exporter
        namespace: ajay
        labels:
          app: k8s-triliovault-exporter
          rel: tvm-ajay
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-exporter
          app.kubernetes.io/managed-by: Helm
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: k8s-triliovault-exporter
            rel: tvm-ajay
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/path: /metrics
              prometheus.io/port: "8080"
            labels:
              app.kubernetes.io/part-of: k8s-triliovault
              app.kubernetes.io/name: k8s-triliovault
              app.kubernetes.io/instance: k8s-triliovault-exporter
              app.kubernetes.io/managed-by: Helm
              app: k8s-triliovault-exporter
              rel: tvm-ajay
          spec:
            hostNetwork: false
            hostIPC: false
            hostPID: false
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            serviceAccountName: k8s-triliovault
            containers:
              - name: triliovault-exporter
                image: eu.gcr.io/amazing-chalice-243510/exporter:v2.1.0-beta.6
                imagePullPolicy: IfNotPresent
                env:
                  - name: INSTALL_NAMESPACE
                    value: ajay
                  - name: RELEASE_TAG
                    value: v2.1.0-beta.6
                  - name: APP_SCOPE
                    value: Namespaced
                ports:
                  - containerPort: 8080
                resources:
                  requests:
                    memory: "10Mi"
                    cpu: "10m"
                  limits:
                    memory: "512Mi"
                    cpu: "200m"
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    add:
                    - KILL
                    - AUDIT_WRITE
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: false
                  runAsNonRoot: true
                  runAsUser: 1001
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                      - amd64
      ---
      # Source: k8s-triliovault/templates/ingress-deployment.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: k8s-triliovault-ingress-gateway
        namespace: ajay
        labels:
          app: k8s-triliovault-ingress-gateway
          release: tvm-ajay
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-ingress-gateway
          app.kubernetes.io/managed-by: Helm
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: k8s-triliovault-ingress-gateway
            release: tvm-ajay
        template:
          metadata:
            labels:
              app: k8s-triliovault-ingress-gateway
              release: tvm-ajay
              app.kubernetes.io/part-of: k8s-triliovault
              app.kubernetes.io/name: k8s-triliovault
              app.kubernetes.io/instance: k8s-triliovault-ingress-gateway
              app.kubernetes.io/managed-by: Helm
          spec:
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            serviceAccountName: k8s-triliovault
            containers:
              - command:
                  - "/bin/sh"
                  - "-c"
                  - "/opt/tvk/tls-injector --secret=k8s-triliovault-ingress-tls-certs && /opt/tvk/nginx-ingress
                    -nginx-plus=false
                    -nginx-reload-timeout=0
                    -enable-app-protect=false
                    -default-server-tls-secret=$(POD_NAMESPACE)/k8s-triliovault-ingress-tls-certs
                    -ingress-class=nginx
                    -use-ingress-class-only=false
                    -watch-namespace=$(POD_NAMESPACE)
                    -nginx-debug=false
                    -v=1
                    -nginx-status=false
                    -report-ingress-status
                    -enable-leader-election=false
                    -enable-prometheus-metrics=false
                    -enable-custom-resources=false
                    -ready-status=false
                    -enable-latency-metrics=false"
                env:
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.name
                  - name: POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                  - name: INGRESS_SERVICE
                    value: k8s-triliovault-ingress-gateway
                image: eu.gcr.io/amazing-chalice-243510/ingress-controller:v2.1.0-beta.6
                imagePullPolicy: IfNotPresent
                name: ingress-controller
                ports:
                  - containerPort: 80
                    name: http
                    protocol: TCP
                  - containerPort: 443
                    name: https
                    protocol: TCP
                resources:
                  requests:
                    memory: "10Mi"
                    cpu: "10m"
                  limits:
                    memory: "512Mi"
                    cpu: "200m"
                securityContext:
                  capabilities:
                    add:
                      - SYS_ADMIN
                      - NET_BIND_SERVICE
                    drop:
                      - ALL
                  privileged: false
                  allowPrivilegeEscalation: true
                  readOnlyRootFilesystem: false
                  runAsNonRoot: true
                  runAsUser: 1001
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                      - amd64
      ---
      # Source: k8s-triliovault/templates/web-deployment.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: k8s-triliovault-web
        namespace: ajay
        labels:
          app: k8s-triliovault-web
          release: tvm-ajay
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-web
          app.kubernetes.io/managed-by: Helm
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: k8s-triliovault-web
            release: tvm-ajay
        template:
          metadata:
            labels:
              app.kubernetes.io/part-of: k8s-triliovault
              app.kubernetes.io/name: k8s-triliovault
              app.kubernetes.io/instance: k8s-triliovault-web
              app.kubernetes.io/managed-by: Helm
              app: k8s-triliovault-web
              release: tvm-ajay
          spec:
            hostNetwork: false
            hostIPC: false
            hostPID: false
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            serviceAccountName: k8s-triliovault
            containers:
              - name: triliovault-web
                image: eu.gcr.io/amazing-chalice-243510/web:v2.1.0-beta.6
                imagePullPolicy: IfNotPresent
                ports:
                - containerPort: 9443
                env:
                - name: INSTALL_NAMESPACE
                  value: ajay
                - name: APP_SCOPE
                  value: Namespaced
                - name: RELEASE
                  value: tvm-ajay
                resources:
                  requests:
                    memory: "10Mi"
                    cpu: "10m"
                  limits:
                    memory: "512Mi"
                    cpu: "200m"
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    add:
                    - KILL
                    - AUDIT_WRITE
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: false
                  runAsNonRoot: true
                  runAsUser: 1001
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                      - amd64
      ---
      # Source: k8s-triliovault/templates/webhook-deployment.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: k8s-triliovault-admission-webhook
        namespace: ajay
        labels:
          app: k8s-triliovault-admission-webhook
          release: tvm-ajay
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-admission-webhook
          app.kubernetes.io/managed-by: Helm
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: k8s-triliovault-admission-webhook
            release: tvm-ajay
        template:
          metadata:
            labels:
              app.kubernetes.io/part-of: k8s-triliovault
              app.kubernetes.io/name: k8s-triliovault
              app.kubernetes.io/instance: k8s-triliovault-admission-webhook
              app.kubernetes.io/managed-by: Helm
              app: k8s-triliovault-admission-webhook
              release: tvm-ajay
          spec:
            hostNetwork: false
            hostIPC: false
            hostPID: false
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            serviceAccountName: k8s-triliovault
            containers:
              - name: triliovault-admission-webhook
                image: eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook:v2.1.0-beta.6
                imagePullPolicy: IfNotPresent
                args:
                  - --tlsCertFile=/etc/webhook/certs/tls.crt
                  - --tlsKeyFile=/etc/webhook/certs/tls.key
                env:
                  - name: INSTALL_NAMESPACE
                    value: ajay
                  - name: APP_SCOPE
                    value: Namespaced
                  - name: RESTORE_NAMESPACES
                    value: default,ajay,ajay-res
                volumeMounts:
                  - name: webhook-certs
                    mountPath: /etc/webhook/certs
                    readOnly: true
                resources:
                  requests:
                    memory: "10Mi"
                    cpu: "10m"
                  limits:
                    memory: "512Mi"
                    cpu: "200m"
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    add:
                    - KILL
                    - AUDIT_WRITE
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: false
                  runAsNonRoot: true
                  runAsUser: 1001
            initContainers:
              - name: webhook-init
                image: eu.gcr.io/amazing-chalice-243510/trilio-webhook-init:v2.1.0-beta.6
                imagePullPolicy: IfNotPresent
                resources:
                  requests:
                    memory: "10Mi"
                    cpu: "10m"
                  limits:
                    memory: "512Mi"
                    cpu: "200m"
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    add:
                    - KILL
                    - AUDIT_WRITE
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: false
                  runAsNonRoot: true
                  runAsUser: 1001
                env:
                  - name: IMAGE_PULL_POLICY
                    value: IfNotPresent
                  - name: MUTATE_CONFIG
                    value: k8s-triliovault-mutating-webhook
                  - name: VALIDATE_CONFIG
                    value: k8s-triliovault-validating-webhook
                  - name: WEBHOOK_SERVICE
                    value: k8s-triliovault-admission-webhook
                  - name: INSTALL_NAMESPACE
                    value: ajay
                  - name: SECRET_NAME
                    value: k8s-triliovault-webhook-certs
                  - name: APP
                    value: k8s-triliovault-admission-webhook
                  - name: RELEASE
                    value: tvm-ajay
                  - name: APP_SCOPE
                    value: Namespaced
                  - name: RESOURCE_CLEANER_CRON_NAME
                    value: k8s-triliovault-resource-cleaner
                  - name: RESOURCE_CLEANER_CRON_SCHEDULE
                    value: "*/30 * * * *"
                  - name: RELATED_RESOURCE_CLEANER_IMAGE
                    value: eu.gcr.io/amazing-chalice-243510/resource-cleaner:v2.1.0-beta.6
                  - name: WEB_SERVICE
                    value: k8s-triliovault-web
                  - name: BACKEND_SERVICE
                    value: k8s-triliovault-web-backend
            volumes:
              - name: webhook-certs
                secret:
                  secretName: k8s-triliovault-webhook-certs
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                      - amd64
      ---
      # Source: k8s-triliovault/templates/mutatingwebhookconfiguration.yaml
      apiVersion: admissionregistration.k8s.io/v1
      kind: MutatingWebhookConfiguration
      metadata:
        name: k8s-triliovault-mutating-webhook-ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-mutating-webhook-ajay
          app.kubernetes.io/managed-by: Helm
      webhooks:
        - clientConfig:
            service:
              name: k8s-triliovault-admission-webhook
              namespace: ajay
              path: /mutate
          failurePolicy: Fail
          name: tvk-mutation.trilio.io
          namespaceSelector:
            matchExpressions:
              - key: trilio-label
                operator: In
                values:
                  - ajay
          sideEffects: None
          admissionReviewVersions:
            - v1
          rules:
            - apiGroups:
                - triliovault.trilio.io
              apiVersions:
                - v1
              operations:
                - CREATE
                - UPDATE
                - DELETE
              resources:
                - backupplans
                - backups
                - hooks
                - restores
                - policies
                - targets
                - licenses
          timeoutSeconds: 30
      ---
      # Source: k8s-triliovault/templates/validationwebhookconfiguration.yaml
      apiVersion: admissionregistration.k8s.io/v1
      kind: ValidatingWebhookConfiguration
      metadata:
        name: k8s-triliovault-validating-webhook-ajay
        labels:
          app.kubernetes.io/part-of: k8s-triliovault
          app.kubernetes.io/name: k8s-triliovault
          app.kubernetes.io/instance: k8s-triliovault-validating-webhook-ajay
          app.kubernetes.io/managed-by: Helm
      webhooks:
        - clientConfig:
            service:
              name: k8s-triliovault-admission-webhook
              namespace: ajay
              path: /validate
          failurePolicy: Fail
          name: tvk-validation.trilio.io
          namespaceSelector:
            matchExpressions:
              - key: trilio-label
                operator: In
                values:
                  - ajay
          sideEffects: None
          admissionReviewVersions:
            - v1
          rules:
            - apiGroups:
                - triliovault.trilio.io
              apiVersions:
                - v1
              operations:
                - CREATE
                - UPDATE
                - DELETE
              resources:
                - backupplans
                - backups
                - hooks
                - restores
                - policies
                - targets
                - licenses
          timeoutSeconds: 30
    name: tvm-ajay
