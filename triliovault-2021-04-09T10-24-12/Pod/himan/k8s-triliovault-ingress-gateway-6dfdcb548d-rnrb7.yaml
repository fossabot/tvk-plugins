apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-03-17T05:40:51Z"
  generateName: k8s-triliovault-ingress-gateway-6dfdcb548d-
  labels:
    app: k8s-triliovault-ingress-gateway
    app.kubernetes.io/instance: k8s-triliovault-ingress-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s-triliovault
    app.kubernetes.io/part-of: k8s-triliovault
    pod-template-hash: 6dfdcb548d
    release: tvk
  name: k8s-triliovault-ingress-gateway-6dfdcb548d-rnrb7
  namespace: himan
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: k8s-triliovault-ingress-gateway-6dfdcb548d
    uid: 21d500a9-538f-4b4e-bf4f-96b99a076da7
  resourceVersion: "58361392"
  selfLink: /api/v1/namespaces/himan/pods/k8s-triliovault-ingress-gateway-6dfdcb548d-rnrb7
  uid: 9e21e674-e7b1-4b3d-a228-4bb15934cef3
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - amd64
  containers:
  - command:
    - /bin/sh
    - -c
    - /opt/tvk/tls-injector --secret=k8s-triliovault-ingress-tls-certs && /opt/tvk/nginx-ingress
      -nginx-plus=false -nginx-reload-timeout=0 -enable-app-protect=false -default-server-tls-secret=$(POD_NAMESPACE)/k8s-triliovault-ingress-tls-certs
      -ingress-class=nginx -use-ingress-class-only=false -watch-namespace=$(POD_NAMESPACE)
      -nginx-debug=false -v=1 -nginx-status=false -report-ingress-status -enable-prometheus-metrics=false
      -enable-custom-resources=false -ready-status=false -enable-latency-metrics=false
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: INGRESS_SERVICE
      value: k8s-triliovault-ingress-gateway
    image: gcr.io/amazing-chalice-243510/ingress-controller:a61e4233600e039ce9f15c71a76345731476dd8b
    imagePullPolicy: IfNotPresent
    name: ingress-controller
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      name: https
      protocol: TCP
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 10m
        memory: 10Mi
    securityContext:
      capabilities:
        add:
        - SYS_ADMIN
        - NET_BIND_SERVICE
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 1001
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: k8s-triliovault-token-mt98c
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: gke-dev-cluster-dev-cluster-pool-eab0992b-5s14
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
  serviceAccount: k8s-triliovault
  serviceAccountName: k8s-triliovault
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: k8s-triliovault-token-mt98c
    secret:
      defaultMode: 420
      secretName: k8s-triliovault-token-mt98c
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2021-03-17T05:40:52Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2021-03-17T05:40:55Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2021-03-17T05:40:55Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2021-03-17T05:40:51Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://fde81bf5732479bfccfbcecb99c939ffde1b9205e428e85fbfc016db96f7dca1
    image: gcr.io/amazing-chalice-243510/ingress-controller:732a84777a2a4c8d3c5e62ce287e13a7ac9b2557
    imageID: docker-pullable://gcr.io/amazing-chalice-243510/ingress-controller@sha256:0e31b631ed02b6c173feaca21506d386b2f2067587cc08c50e27243463f9d223
    lastState: {}
    name: ingress-controller
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-03-17T05:40:54Z"
  hostIP: 10.142.0.107
  phase: Running
  podIP: 10.92.1.114
  podIPs:
  - ip: 10.92.1.114
  qosClass: Burstable
  startTime: "2021-03-17T05:40:52Z"
